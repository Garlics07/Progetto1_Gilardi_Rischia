{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fortu\\\\Documents\\\\GitHub\\\\Progetto1_Gilardi_Rischia\\\\client\\\\src\\\\components\\\\WeeklyCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { format, startOfWeek, addDays } from 'date-fns';\nimport { it } from 'date-fns/locale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeeklyCalendar = () => {\n  _s();\n  //funzione per la visualizzazione del calendario settimanale\n  const [prenotazioni, setPrenotazioni] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [currentDate] = useState(new Date());\n\n  // Funzione per ottenere gli orari in base al giorno\n  const getTimeSlotsByDay = dayIndex => {\n    // dayIndex: 0 = Lunedì, 6 = Domenica\n    switch (dayIndex) {\n      case 5:\n        // Sabato\n        return Array.from({\n          length: 12\n        }, (_, i) => {\n          const hour = i + 9; // 9:00 - 20:00\n          return `${hour.toString().padStart(2, '0')}:00`;\n        });\n      case 6:\n        // Domenica\n        return Array.from({\n          length: 10\n        }, (_, i) => {\n          const hour = i + 9; // 9:00 - 18:00\n          return `${hour.toString().padStart(2, '0')}:00`;\n        });\n      default:\n        // Lunedì - Venerdì\n        return Array.from({\n          length: 15\n        }, (_, i) => {\n          const hour = i + 8; // 8:00 - 22:00\n          return `${hour.toString().padStart(2, '0')}:00`;\n        });\n    }\n  };\n\n  // Funzione per normalizzare il formato dell'ora\n  const normalizeTime = time => {\n    if (!time) return '';\n    // Rimuovi eventuali secondi e millisecondi\n    const [hours, minutes] = time.split(':');\n    return `${hours.padStart(2, '0')}:${minutes || '00'}`;\n  };\n\n  // Genera i giorni della settimana\n  const weekDays = Array.from({\n    length: 7\n  }, (_, i) => {\n    const day = addDays(startOfWeek(currentDate, {\n      weekStartsOn: 1\n    }), i);\n    const formattedDate = format(day, 'yyyy-MM-dd');\n    console.log('Data generata:', formattedDate);\n    return {\n      date: day,\n      formattedDate: formattedDate,\n      dayName: format(day, 'EEEE', {\n        locale: it\n      }),\n      timeSlots: getTimeSlotsByDay(i)\n    };\n  });\n  useEffect(() => {\n    fetchPrenotazioni();\n  }, []);\n  const fetchPrenotazioni = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:5000/api/prenotazioni/calendario', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Prenotazioni ricevute:', response.data);\n      setPrenotazioni(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Errore nel caricamento delle prenotazioni:', error);\n      setError('Errore nel caricamento delle prenotazioni');\n      setLoading(false);\n    }\n  };\n  const getPrenotazioneForSlot = (date, time) => {\n    console.log('Cercando prenotazione per:', {\n      date,\n      time\n    });\n    const prenotazione = prenotazioni.find(p => {\n      const normalizedBookingTime = normalizeTime(p.ora);\n      const normalizedSlotTime = normalizeTime(time);\n      console.log('Confronto:', {\n        data: p.data,\n        dataCalendario: date,\n        oraPrenotazione: p.ora,\n        oraNormalizzataPrenotazione: normalizedBookingTime,\n        oraSlot: time,\n        oraNormalizzataSlot: normalizedSlotTime,\n        match: p.data === date && normalizedBookingTime === normalizedSlotTime\n      });\n      return p.data === date && normalizedBookingTime === normalizedSlotTime;\n    });\n    if (prenotazione) {\n      console.log('Prenotazione trovata:', prenotazione);\n    }\n    return prenotazione;\n  };\n  const getPrenotazioneStyle = campo => {\n    switch (campo) {\n      case '⚽ Campo da Calcio':\n        return 'bg-success';\n      case '🎾 Campo da Tennis':\n        return 'bg-warning';\n      case '🏀 Campo da Basket':\n        return 'bg-danger';\n      case '🏐 Campo da Volley':\n        return 'bg-info';\n      default:\n        return 'bg-primary';\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Caricamento...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger mt-3\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive\",\n    children: [prenotazioni.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: \"Non ci sono prenotazioni da visualizzare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), weekDays.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            style: {\n              minWidth: '150px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fw-bold\",\n              children: day.dayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: format(day.date, 'd MMMM', {\n                locale: it\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this)]\n          }, day.formattedDate, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.from({\n          length: 15\n        }, (_, i) => {\n          const hour = (i + 8).toString().padStart(2, '0') + ':00';\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"align-middle\",\n              children: hour\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), weekDays.map(day => {\n              // Verifica se l'ora è disponibile per questo giorno\n              const isTimeSlotAvailable = day.timeSlots.includes(hour);\n              if (!isTimeSlotAvailable) {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"bg-light text-muted text-center\",\n                  children: \"Chiuso\"\n                }, `${day.formattedDate}-${hour}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 48\n                }, this);\n              }\n              const prenotazione = getPrenotazioneForSlot(day.formattedDate, hour);\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: prenotazione ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `p-2 rounded ${getPrenotazioneStyle(prenotazione.campo)}`,\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-white\",\n                    children: prenotazione.campo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 49\n                }, this)\n              }, `${day.formattedDate}-${hour}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 41\n              }, this);\n            })]\n          }, hour, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n_s(WeeklyCalendar, \"ZLLtGFZFNQtpx78Uu2EGAkhVx/c=\");\n_c = WeeklyCalendar;\nexport default WeeklyCalendar;\nvar _c;\n$RefreshReg$(_c, \"WeeklyCalendar\");","map":{"version":3,"names":["React","useState","useEffect","axios","format","startOfWeek","addDays","it","jsxDEV","_jsxDEV","WeeklyCalendar","_s","prenotazioni","setPrenotazioni","loading","setLoading","error","setError","currentDate","Date","getTimeSlotsByDay","dayIndex","Array","from","length","_","i","hour","toString","padStart","normalizeTime","time","hours","minutes","split","weekDays","day","weekStartsOn","formattedDate","console","log","date","dayName","locale","timeSlots","fetchPrenotazioni","token","localStorage","getItem","response","get","headers","Authorization","data","getPrenotazioneForSlot","prenotazione","find","p","normalizedBookingTime","ora","normalizedSlotTime","dataCalendario","oraPrenotazione","oraNormalizzataPrenotazione","oraSlot","oraNormalizzataSlot","match","getPrenotazioneStyle","campo","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","map","style","minWidth","isTimeSlotAvailable","includes","_c","$RefreshReg$"],"sources":["C:/Users/fortu/Documents/GitHub/Progetto1_Gilardi_Rischia/client/src/components/WeeklyCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { format, startOfWeek, addDays } from 'date-fns';\r\nimport { it } from 'date-fns/locale';\r\n\r\nconst WeeklyCalendar = () => {  //funzione per la visualizzazione del calendario settimanale\r\n    const [prenotazioni, setPrenotazioni] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [currentDate] = useState(new Date());\r\n\r\n    // Funzione per ottenere gli orari in base al giorno\r\n    const getTimeSlotsByDay = (dayIndex) => {\r\n        // dayIndex: 0 = Lunedì, 6 = Domenica\r\n        switch (dayIndex) {\r\n            case 5: // Sabato\r\n                return Array.from({ length: 12 }, (_, i) => {\r\n                    const hour = i + 9; // 9:00 - 20:00\r\n                    return `${hour.toString().padStart(2, '0')}:00`;\r\n                });\r\n            case 6: // Domenica\r\n                return Array.from({ length: 10 }, (_, i) => {\r\n                    const hour = i + 9; // 9:00 - 18:00\r\n                    return `${hour.toString().padStart(2, '0')}:00`;\r\n                });\r\n            default: // Lunedì - Venerdì\r\n                return Array.from({ length: 15 }, (_, i) => {\r\n                    const hour = i + 8; // 8:00 - 22:00\r\n                    return `${hour.toString().padStart(2, '0')}:00`;\r\n                });\r\n        }\r\n    };\r\n\r\n    // Funzione per normalizzare il formato dell'ora\r\n    const normalizeTime = (time) => {\r\n        if (!time) return '';\r\n        // Rimuovi eventuali secondi e millisecondi\r\n        const [hours, minutes] = time.split(':');\r\n        return `${hours.padStart(2, '0')}:${minutes || '00'}`;\r\n    };\r\n\r\n    // Genera i giorni della settimana\r\n    const weekDays = Array.from({ length: 7 }, (_, i) => {\r\n        const day = addDays(startOfWeek(currentDate, { weekStartsOn: 1 }), i);\r\n        const formattedDate = format(day, 'yyyy-MM-dd');\r\n        console.log('Data generata:', formattedDate);\r\n        return {\r\n            date: day,\r\n            formattedDate: formattedDate,\r\n            dayName: format(day, 'EEEE', { locale: it }),\r\n            timeSlots: getTimeSlotsByDay(i)\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchPrenotazioni();\r\n    }, []);\r\n\r\n    const fetchPrenotazioni = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get('http://localhost:5000/api/prenotazioni/calendario', {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            console.log('Prenotazioni ricevute:', response.data);\r\n            setPrenotazioni(response.data);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error('Errore nel caricamento delle prenotazioni:', error);\r\n            setError('Errore nel caricamento delle prenotazioni');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const getPrenotazioneForSlot = (date, time) => {\r\n        console.log('Cercando prenotazione per:', { date, time });\r\n        const prenotazione = prenotazioni.find(p => {\r\n            const normalizedBookingTime = normalizeTime(p.ora);\r\n            const normalizedSlotTime = normalizeTime(time);\r\n            \r\n            console.log('Confronto:', {\r\n                data: p.data,\r\n                dataCalendario: date,\r\n                oraPrenotazione: p.ora,\r\n                oraNormalizzataPrenotazione: normalizedBookingTime,\r\n                oraSlot: time,\r\n                oraNormalizzataSlot: normalizedSlotTime,\r\n                match: p.data === date && normalizedBookingTime === normalizedSlotTime\r\n            });\r\n            \r\n            return p.data === date && normalizedBookingTime === normalizedSlotTime;\r\n        });\r\n        \r\n        if (prenotazione) {\r\n            console.log('Prenotazione trovata:', prenotazione);\r\n        }\r\n        return prenotazione;\r\n    };\r\n\r\n    const getPrenotazioneStyle = (campo) => {\r\n        switch(campo) {\r\n            case '⚽ Campo da Calcio':\r\n                return 'bg-success';\r\n            case '🎾 Campo da Tennis':\r\n                return 'bg-warning';\r\n            case '🏀 Campo da Basket':\r\n                return 'bg-danger';\r\n            case '🏐 Campo da Volley':\r\n                return 'bg-info';\r\n            default:\r\n                return 'bg-primary';\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"text-center mt-5\">\r\n                <div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Caricamento...</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"alert alert-danger mt-3\">{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-responsive\">\r\n            {prenotazioni.length === 0 && !loading && (\r\n                <div className=\"alert alert-info\">\r\n                    Non ci sono prenotazioni da visualizzare\r\n                </div>\r\n            )}\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Ora</th>\r\n                        {weekDays.map(day => (\r\n                            <th key={day.formattedDate} className=\"text-center\" style={{ minWidth: '150px' }}>\r\n                                <div className=\"fw-bold\">{day.dayName}</div>\r\n                                <div>{format(day.date, 'd MMMM', { locale: it })}</div>\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Array.from({ length: 15 }, (_, i) => {\r\n                        const hour = (i + 8).toString().padStart(2, '0') + ':00';\r\n                        return (\r\n                            <tr key={hour}>\r\n                                <td className=\"align-middle\">{hour}</td>\r\n                                {weekDays.map(day => {\r\n                                    // Verifica se l'ora è disponibile per questo giorno\r\n                                    const isTimeSlotAvailable = day.timeSlots.includes(hour);\r\n                                    if (!isTimeSlotAvailable) {\r\n                                        return <td key={`${day.formattedDate}-${hour}`} className=\"bg-light text-muted text-center\">Chiuso</td>;\r\n                                    }\r\n\r\n                                    const prenotazione = getPrenotazioneForSlot(day.formattedDate, hour);\r\n                                    return (\r\n                                        <td key={`${day.formattedDate}-${hour}`} className=\"text-center\">\r\n                                            {prenotazione ? (\r\n                                                <div className={`p-2 rounded ${getPrenotazioneStyle(prenotazione.campo)}`}>\r\n                                                    <small className=\"text-white\">\r\n                                                        {prenotazione.campo}\r\n                                                    </small>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <div></div>\r\n                                            )}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeeklyCalendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}